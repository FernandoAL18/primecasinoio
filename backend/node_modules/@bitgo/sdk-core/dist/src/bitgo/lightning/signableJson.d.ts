export declare type Signable = boolean | number | string | SignableRecord | SignableArray;
export interface SignableRecord {
    [key: string]: Signable;
}
export interface SignableArray {
    [key: number]: Signable;
}
/**
 * Recursively canonicalizes an object by sorting its keys.
 *
 * @param obj - The object to be canonicalized. It can be a boolean, number, string,
 *              a record of signable values, or an array of signable values.
 * @returns The canonicalized object with sorted keys.
 * @throws Will throw an error if the object type is invalid.
 */
export declare function canonicalizeObject(obj: Signable): Signable;
//# sourceMappingURL=signableJson.d.ts.map