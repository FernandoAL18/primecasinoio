import * as t from "io-ts";

export enum WebhookTypeEnum {
  // Webhook for txRequest.state changes
  "txRequest" = "txRequest",
  // Webhook for any txRequest.transactions[].state changes
  "txRequestTransaction" = "txRequestTransaction",
  "transfer" = "transfer",
  "transaction" = "transaction",
  "transactionRemoved" = "transactionRemoved",
  "transactionExpire" = "transactionExpire",
  "pendingapproval" = "pendingapproval",
  "block" = "block",
  "admin" = "admin",
  "address_confirmation" = "address_confirmation",
  "lowFee" = "lowFee",
  "circuitBreaker" = "circuitBreaker",

  // Specific to User Webhooks
  "wallet_confirmation" = "wallet_confirmation",

  "wireWithdrawal" = "wireWithdrawal",
  "bankAccount" = "bankAccount",
  "userKycState" = "userKycState",
  "enterpriseKycState" = "enterpriseKycState",
  "identityStatus" = "identityStatus",

  "accessToken" = "accessToken",
}

export const WebhookType = t.keyof(WebhookTypeEnum, "WebhookType");
export type WebhookType = t.TypeOf<typeof WebhookType>;

export enum WalletWebhookTypeEnum {
  "txRequest" = "txRequest",
  "txRequestTransaction" = "txRequestTransaction",
  "transfer" = "transfer",
  "transaction" = "transaction",
  "transactionRemoved" = "transactionRemoved",
  "transactionExpire" = "transactionExpire",
  "pendingapproval" = "pendingapproval",
  "block" = "block",
  "admin" = "admin",
  "address_confirmation" = "address_confirmation",
  "lowFee" = "lowFee",
  "circuitBreaker" = "circuitBreaker",
  "wireWithdrawal" = "wireWithdrawal",
}

export const WalletWebhookType = t.keyof(
  WalletWebhookTypeEnum,
  "WalletWebhookType",
);
export type WalletWebhookType = t.TypeOf<typeof WalletWebhookType>;

export enum EnterpriseWebhookTypeEnum {
  "bankAccount" = "bankAccount",
  "accessToken" = "accessToken",
}
export const EnterpriseWebhookType = t.keyof(
  EnterpriseWebhookTypeEnum,
  "EnterpriseWebhookType",
);
export type EnterpriseWebhookType = t.TypeOf<typeof EnterpriseWebhookType>;
