import * as t from "io-ts";
import { NonEmptyString } from "io-ts-types";

import { MPCv2PartyFromStringOrNumber } from "../../common";

const AuthEncMessage = t.type({
  encryptedMessage: NonEmptyString,
  signature: NonEmptyString,
});

type AuthEncMessage = t.TypeOf<typeof AuthEncMessage>;

export const AuthEncP2PMessage = t.intersection([
  t.type({
    payload: AuthEncMessage,
    from: MPCv2PartyFromStringOrNumber,
    to: MPCv2PartyFromStringOrNumber,
  }),
  t.partial({
    commitment: NonEmptyString,
  }),
]);

export type AuthEncP2PMessage = t.TypeOf<typeof AuthEncP2PMessage>;
