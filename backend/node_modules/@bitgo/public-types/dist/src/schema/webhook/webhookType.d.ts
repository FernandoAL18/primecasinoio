import * as t from "io-ts";
export declare enum WebhookTypeEnum {
    "txRequest" = "txRequest",
    "txRequestTransaction" = "txRequestTransaction",
    "transfer" = "transfer",
    "transaction" = "transaction",
    "transactionRemoved" = "transactionRemoved",
    "transactionExpire" = "transactionExpire",
    "pendingapproval" = "pendingapproval",
    "block" = "block",
    "admin" = "admin",
    "address_confirmation" = "address_confirmation",
    "lowFee" = "lowFee",
    "circuitBreaker" = "circuitBreaker",
    "wallet_confirmation" = "wallet_confirmation",
    "wireWithdrawal" = "wireWithdrawal",
    "bankAccount" = "bankAccount",
    "userKycState" = "userKycState",
    "enterpriseKycState" = "enterpriseKycState",
    "identityStatus" = "identityStatus",
    "accessToken" = "accessToken"
}
export declare const WebhookType: t.KeyofC<typeof WebhookTypeEnum>;
export type WebhookType = t.TypeOf<typeof WebhookType>;
export declare enum WalletWebhookTypeEnum {
    "txRequest" = "txRequest",
    "txRequestTransaction" = "txRequestTransaction",
    "transfer" = "transfer",
    "transaction" = "transaction",
    "transactionRemoved" = "transactionRemoved",
    "transactionExpire" = "transactionExpire",
    "pendingapproval" = "pendingapproval",
    "block" = "block",
    "admin" = "admin",
    "address_confirmation" = "address_confirmation",
    "lowFee" = "lowFee",
    "circuitBreaker" = "circuitBreaker",
    "wireWithdrawal" = "wireWithdrawal"
}
export declare const WalletWebhookType: t.KeyofC<typeof WalletWebhookTypeEnum>;
export type WalletWebhookType = t.TypeOf<typeof WalletWebhookType>;
export declare enum EnterpriseWebhookTypeEnum {
    "bankAccount" = "bankAccount",
    "accessToken" = "accessToken"
}
export declare const EnterpriseWebhookType: t.KeyofC<typeof EnterpriseWebhookTypeEnum>;
export type EnterpriseWebhookType = t.TypeOf<typeof EnterpriseWebhookType>;
