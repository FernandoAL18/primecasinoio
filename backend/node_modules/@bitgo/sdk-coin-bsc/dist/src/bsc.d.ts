import { BaseCoin, BitGoBase, MPCAlgorithm } from '@bitgo/sdk-core';
import { BaseCoin as StaticsBaseCoin } from '@bitgo/statics';
import { AbstractEthLikeNewCoins } from '@bitgo/abstract-eth';
import { TransactionBuilder } from './lib';
export declare class Bsc extends AbstractEthLikeNewCoins {
    protected constructor(bitgo: BitGoBase, staticsCoin?: Readonly<StaticsBaseCoin>);
    static createInstance(bitgo: BitGoBase, staticsCoin?: Readonly<StaticsBaseCoin>): BaseCoin;
    protected getTransactionBuilder(): TransactionBuilder;
    /** @inheritDoc */
    allowsAccountConsolidations(): boolean;
    /** @inheritDoc */
    supportsTss(): boolean;
    /** @inheritDoc */
    getMPCAlgorithm(): MPCAlgorithm;
    recoveryBlockchainExplorerQuery(query: Record<string, string>): Promise<Record<string, unknown>>;
}
//# sourceMappingURL=bsc.d.ts.map